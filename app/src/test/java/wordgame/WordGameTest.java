/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package wordgame;

import org.junit.Test;
import static org.junit.Assert.*;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;

public class WordGameTest {
  @Test
  public void appPicksARandomWord() {
    WordGame game = new WordGame();
    ArrayList<String> words = new ArrayList<String>(
        Arrays.asList("Python", "Ruby", "Java"));

    for (String word : words) {
      game.addWord(word);
    }
    game.chooseWord();

    assertTrue(words.contains(game.getChosenWord()));
  }

  @Test
  public void appShowsWordWithFirstLetterOnly() {
    WordGame game = new WordGame();
    game.addWord("Python");
    game.chooseWord();
    game.buildWord();
    assertEquals(game.getRenderedWord(), "P_____");
  }

  @Test
  public void appStartWithTenAttempts() {
    WordGame game = new WordGame();

    assertEquals(Integer.valueOf(10), game.getAttempts());
  }

  @Test
  public void appUsersGuessIsAddedToList() {
    WordGame game = new WordGame();

    game.addGuess('a');

    assertEquals(game.getGuesses().get(0), Character.valueOf('a'));
  }

  @Test
  public void appRendersWordCorrectlyGivenGuesses() {
    WordGame game = new WordGame();
    game.addWord("Python");
    game.chooseWord();
    game.buildWord();
    assertEquals(game.getRenderedWord(), "P_____");
    game.addGuess('a');
    game.buildWord();
    assertEquals(game.getRenderedWord(), "P_____");
    game.addGuess('y');
    game.buildWord();
    assertEquals(game.getRenderedWord(), "Py____");
    game.addGuess('h');
    game.buildWord();
    assertEquals(game.getRenderedWord(), "Py_h__");
  }

  @Test
  public void appRendersWordCorrectlyGivenGuesses2() {
    WordGame game = new WordGame();
    game.addWord("Java");
    game.chooseWord();
    game.buildWord();
    assertEquals(game.getRenderedWord(), "J___");
    game.addGuess('a');
    game.buildWord();
    assertEquals(game.getRenderedWord(), "Ja_a");
  }

  @Test
  public void methodChecksIfPlayerHasWon() {
    WordGame game = new WordGame();
    game.addWord("Java");
    game.chooseWord();
    game.buildWord();
    assertEquals(game.getRenderedWord(), "J___");
    assertFalse(game.checkWin());
    game.addGuess('a');
    game.buildWord();
    assertEquals(game.getRenderedWord(), "Ja_a");
    assertFalse(game.checkWin());
    game.addGuess('v');
    game.buildWord();
    assertEquals(game.getRenderedWord(), "Java");
    assertTrue(game.checkWin());
  }

  @Test
  public void userEntersALetter() {
    String userInput = String.format("a");
    ByteArrayInputStream fakeIn = new ByteArrayInputStream(userInput.getBytes());
    System.setIn(fakeIn);

    String expected = "Ja_a";
    ByteArrayOutputStream fakeOut = new ByteArrayOutputStream();
    PrintStream fakeStream = new PrintStream(fakeOut);
    System.setOut(fakeStream);

    String actual = "Ja_a";

    assertEquals(expected, actual);
  }
}
